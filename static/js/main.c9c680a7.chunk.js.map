{"version":3,"sources":["components/Arrow.jsx","components/DataPoint.jsx","components/RulerMarking.jsx","components/Counter.jsx","components/Ruler.jsx","App.js","serviceWorker.js","index.js"],"names":["Arrow","props","styles","width","height","backgroundColor","margin","type","Object","assign","style","TitleContainer","styled","div","Point","year","DataPoint","data","maxYear","years_from_today","className","years_from_today_augmented","title","markingLocation","yearsAgo","lineLength","position","left","top","Counter","window","innerWidth","bottom","transform","display","flexDirection","justifyContent","alignItems","formattedYear","toLocaleString","undefined","minimumFrationDigits","Ruler","Math","round","this","scrollLocation","yearsPerMarking","max","uppermostMarkerPosition","min","lowermostMarkerPosition","endOfHistory","firstMarkingLocation","lastMarkingLocation","i","markings","numberOfMarkings","push","RulerMarking","key","middleYear","React","Component","offset","AppContainer","Scrollable","Intro","App","state","app","createRef","handleScroll","bind","current","addEventListener","fetch","location","then","response","json","setState","removeEventListener","e","target","scrollLeft","pStyle","ref","marginTop","padding","marginBottom","map","point","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c9c680a7.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Arrow = (props) => {\n  const styles = {\n    width: \"30px\",\n    height: \"1px\",\n    backgroundColor: \"white\",\n    margin: \"0 10px\"\n  };\n\n  if (props.type === \"vertical\") {\n    Object.assign(styles, {\n      height: \"30px\",\n      width: \"1px\",\n      margin: \"10px 0\"\n    })\n  }\n\n  return (\n    <div style={styles}>\n    </div>\n  );\n};\n\nexport default Arrow;\n","import React from 'react';\nimport Arrow from './Arrow';\n\nimport styled from 'styled-components';\n\nconst TitleContainer = styled.div`\n  transform: translateX(-10px);\n  writing-mode: sideways-lr;\n  flex-grow: 1;\n  text-align: start;\n`;\n\nconst Point = styled.div`\n  position: absolute;\n  left: ${props => props.year}px;\n  bottom: 0px;\n  display: flex;\n  flex-direction: column-reverse;\n  height: 100%;\n`;\n\nconst DataPoint = ({ data, maxYear }) => {\n  if (data.years_from_today > maxYear) {\n    return null;\n  }\n\n  return (\n    <Point className=\"datapoint\" year={data.years_from_today_augmented}>\n      <Arrow type=\"vertical\"/>\n      <TitleContainer>\n        { data.title }\n      </TitleContainer>\n    </Point>\n  );\n};\n\nexport default DataPoint;\n","import React from 'react';\n\nexport default ({ markingLocation, yearsAgo}) => {\n  const lineThickness = 1;\n\n  let lineLength = 10;\n  if (yearsAgo % 1000 === 0) {\n    lineLength = 50\n  }\n  else if (yearsAgo % 100 === 0) {\n    lineLength = 20;\n  }\n\n  const styles = {\n    width: `${lineThickness}px`,\n    height: `${lineLength}px`,\n    backgroundColor: \"red\",\n    position: \"absolute\",\n    left: yearsAgo,\n    top: \"0\",\n  };\n\n  return (\n    <div className=\"ruler-marker\" style={styles}>\n    </div>\n  );\n}\n","import React from 'react';\nimport Arrow from './Arrow';\n\nconst Counter = (props) => {\n  let { year } = props;\n  if (year < 0) return null;\n  if (year === 0) year += 0; // stupid negative zero\n\n  const style = {\n    position: \"fixed\",\n    left: `${window.innerWidth / 2}px`,\n    bottom: \"20px\",\n    transform: \"translateX(-50%)\",\n    display: \"flex\",\n    flexDirection: \"column-reverse\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    width: \"140px\",\n  };\n\n  const formattedYear = year.toLocaleString(undefined, { minimumFrationDigits: 0 })\n\n  return (\n    <div style={style}>\n      <div>\n        <div>\n          { formattedYear }\n        </div>\n        <div>\n          years ago\n        </div>\n      </div>\n      <Arrow type=\"vertical\"/>\n    </div>\n  );\n};\n\nexport default Counter;\n","import React from 'react';\nimport RulerMarking from './RulerMarking';\nimport Counter from './Counter';\n\nconst yearsPerMarking = 10;\n\nclass Ruler extends React.Component {\n  uppermostMarkerPosition() {\n    return Math.round((this.props.scrollLocation - window.innerWidth) / Ruler.yearsPerMarking) * Ruler.yearsPerMarking;\n  }\n\n  firstMarkingLocation() {\n    return Math.max(this.uppermostMarkerPosition(), 0);\n  }\n\n  lastMarkingLocation() {\n    return Math.min(this.lowermostMarkerPosition(), this.endOfHistory());\n  }\n\n  lowermostMarkerPosition() {\n    return this.firstMarkingLocation() + (3 * window.innerWidth);\n  }\n\n  static get yearsPerMarking() {\n    return yearsPerMarking;\n  }\n\n  endOfHistory() {\n    return this.props.maxYear;\n  }\n\n  numberOfMarkings() {\n    return (this.lastMarkingLocation() - this.firstMarkingLocation()) / Ruler.yearsPerMarking;\n  }\n\n  yearsAgo(i) {\n    return Math.round(this.firstMarkingLocation() + i * Ruler.yearsPerMarking);\n  }\n\n  markings() {\n    const markings = [];\n    for (let i = 0; i < this.numberOfMarkings(); i++) {\n      const yearsAgo = this.yearsAgo(i);\n      markings.push(\n        <RulerMarking key={yearsAgo} yearsAgo={yearsAgo} />\n      );\n    }\n\n    return markings;\n  }\n\n  middleYear() {\n    return Math.round(this.props.scrollLocation + (window.innerWidth / 2));\n  }\n\n  render() {\n    const markingStyles = {\n      width: \"100%\",\n      height: \"150px\",\n      position: \"relative\",\n    };\n\n    const rulerStyles = {\n      height: \"150px\",\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    };\n\n    const counterContainerStyles = {\n      height: \"0\",\n      width: \"100%\",\n    };\n\n    return (\n      <div className=\"ruler\" style={rulerStyles}>\n        <div className=\"counter-container\" style={counterContainerStyles}>\n          <Counter year={this.middleYear()} />\n        </div>\n        <div className=\"markings\" style={markingStyles}>\n          { this.markings() }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Ruler;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport './App.css';\nimport DataPoint from './components/DataPoint';\nimport Ruler from './components/Ruler';\n\nconst maxYear = 9003020;\nconst offset = window.innerWidth;\n\nconst AppContainer = styled.div`\n  width: ${props => props.maxYear}px;\n  height: 100vh;\n  color: white;\n  background-color: black;\n  width: 100vw;\n  overflow: scroll;\n`;\n\nconst Scrollable = styled.div`\n  display: flex;\n  width: ${() => maxYear}px;\n`;\n\nconst Intro = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nclass App extends React.Component {\n  static get maxYear() {\n    return maxYear;\n  }\n\n  static get offset() {\n    return offset;\n  }\n\n  constructor() {\n    super();\n\n    this.state = {\n      data: [],\n      scrollLocation: window.innerWidth * -1, // make sure middleYear is negative at mount\n    };\n\n    this.app = React.createRef();\n\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    this.app.current.addEventListener(\"scroll\", this.handleScroll)\n    fetch(`${window.location}/data.json`)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ data })\n      });\n  }\n\n  componentWillUnmount() {\n    this.app.current.removeEventListener(\"scroll\", this.handleScroll)\n  }\n\n  handleScroll(e) {\n    this.setState({ scrollLocation: e.target.scrollLeft - App.offset });\n  }\n\n  render() {\n    const maxYear = App.maxYear;\n\n    const headerStyles = {\n      marginTop: \"30%\",\n      padding: \"0 50px\"\n    };\n\n    const sectionStyle = {\n    };\n\n    const pStyle = {\n      margin: \"0 0\",\n    };\n\n    const footerStyle = {\n      marginBottom: \"30px\",\n    }\n\n    const historyStyles = {\n      position: \"relative\",\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column-reverse\"\n    };\n\n    const datapointsStyles = {\n      height: \"100%\",\n      width: \"100%\",\n      position: \"relative\",\n    }\n\n    return (\n      <AppContainer ref={this.app} className=\"App\" maxYear={maxYear}>\n        <Scrollable>\n          <Intro className=\"intro\">\n            <header style={headerStyles}>\n              <h1>\n                if a year were only a pixel.\n              </h1>\n              <p>\n                a showcase of time.\n              </p>\n            </header>\n            <section style={sectionStyle}>\n              <p>\n                scroll right to explore\n              </p>\n            </section>\n            <footer style={footerStyle}>\n              <p>\n                this first long red line is the year 2020\n              </p>\n              <p style={pStyle}>\n                every small mark is 10 years apart\n              </p>\n              <p style={pStyle}>\n                the bigger ones are 100 years apart\n              </p>\n              <p style={pStyle}>\n                the largest are 1000 years apart\n              </p>\n            </footer>\n          </Intro>\n          <div className=\"history\" style={historyStyles}>\n            <Ruler\n              scrollLocation={this.state.scrollLocation}\n              offset={App.offset}\n              maxYear={maxYear} />\n            <div className=\"datapoints\" style={datapointsStyles}>\n              { this.state.data.map(point => (\n                <DataPoint\n                  data={point}\n                  maxYear={maxYear} />\n              )) }\n            </div>\n          </div>\n      </Scrollable>\n      </AppContainer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}