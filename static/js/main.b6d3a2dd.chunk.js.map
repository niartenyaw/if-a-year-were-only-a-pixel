{"version":3,"sources":["components/Arrow.jsx","components/DataPoint.jsx","components/RulerMarking.jsx","components/Counter.jsx","components/Ruler.jsx","App.js","serviceWorker.js","index.js"],"names":["Arrow","props","style","width","height","backgroundColor","margin","DataPoint","data","maxYear","years_from_today","position","top","years_from_today_augmented","transform","display","alignItems","marginLeft","className","title","markingLocation","yearsAgo","lineLength","styles","right","Counter","year","window","innerHeight","justifyContent","formattedYear","toLocaleString","undefined","minimumFrationDigits","Ruler","state","scrollLocation","handleScroll","bind","document","addEventListener","this","removeEventListener","setState","scrollY","offset","Math","round","yearsPerMarking","max","uppermostMarkerPosition","min","lowermostMarkerPosition","endOfHistory","firstMarkingLocation","lastMarkingLocation","i","markings","numberOfMarkings","push","RulerMarking","key","middleYear","React","Component","App","fetch","location","then","response","json","color","introStyles","flexDirection","paddingTop","paddingLeft","paddingBottom","textAlign","map","point","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"0QAkBeA,G,MAfD,SAACC,GASb,OACE,yBAAKC,MARQ,CACbC,MAAO,OACPC,OAAQ,MACRC,gBAAiB,QACjBC,OAAQ,cCgBGC,EAtBG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzB,GAAID,EAAKE,iBAAmBD,EAC1B,OAAO,KAGT,IAAMP,EAAQ,CACZS,SAAU,WACVC,IAAI,GAAD,OAAKJ,EAAKK,2BAAV,MACHC,UAAW,mBACXC,QAAS,OACTC,WAAY,SACZC,WAAY,OAGd,OACE,yBAAKC,UAAU,YAAYhB,MAAOA,GAChC,kBAAC,EAAD,MACEM,EAAKW,Q,OClBE,cAAkC,EAA/BC,gBAAgC,IAAfC,EAAc,EAAdA,SAG7BC,EAAa,GACbD,EAAW,MAAS,EACtBC,EAAa,GAEND,EAAW,MAAQ,IAC1BC,EAAa,IAGf,IAAMC,EAAS,CACbnB,OAAO,GAAD,OAXc,EAWd,MACND,MAAM,GAAD,OAAKmB,EAAL,MACLjB,gBAAiB,MACjBM,SAAU,WACVC,IAAKS,EACLG,MAAO,KAGT,OACE,yBAAKN,UAAU,eAAehB,MAAOqB,KCO1BE,EA3BC,SAACxB,GAAW,IACpByB,EAASzB,EAATyB,KACN,GAAIA,EAAO,EAAG,OAAO,KACR,IAATA,IAAYA,GAAQ,GAExB,IAAMxB,EAAQ,CACZS,SAAU,SACVC,IAAI,GAAD,OAAKe,OAAOC,YAAc,EAA1B,MACHd,UAAW,mBACXC,QAAS,OACTc,eAAgB,WAChBb,WAAY,SACZb,MAAO,SAGH2B,EAAgBJ,EAAKK,oBAAeC,EAAW,CAAEC,qBAAsB,IAE7E,OACE,yBAAK/B,MAAOA,GACV,6BACI4B,EADJ,cAGA,kBAAC,EAAD,QCoFSI,E,kDAtGb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,eAAgB,GAGlB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAPR,E,gEAWZC,SAASC,iBAAiB,SAAUC,KAAKJ,gB,6CAIzCE,SAASG,oBAAoB,SAAUD,KAAKJ,gB,qCAI5CI,KAAKE,SAAS,CAAEP,eAAgBT,OAAOiB,QAAUH,KAAKxC,MAAM4C,W,gDAI5D,OAAOC,KAAKC,OAAON,KAAKN,MAAMC,eAAiBT,OAAOC,aAAeM,EAAMc,iBAAmBd,EAAMc,kB,6CAIpG,OAAOF,KAAKG,IAAIR,KAAKS,0BAA2B,K,4CAIhD,OAAOJ,KAAKK,IAAIV,KAAKW,0BAA2BX,KAAKY,kB,gDAIrD,OAAOZ,KAAKa,uBAA0B,EAAI3B,OAAOC,c,qCAQjD,OAAOa,KAAKxC,MAAMQ,U,yCAIlB,OAAQgC,KAAKc,sBAAwBd,KAAKa,wBAA0BpB,EAAMc,kB,+BAGnEQ,GACP,OAAOV,KAAKC,MAAMN,KAAKa,uBAAyBE,EAAItB,EAAMc,mB,iCAK1D,IADA,IAAMS,EAAW,GACRD,EAAI,EAAGA,EAAIf,KAAKiB,mBAAoBF,IAAK,CAChD,IAAMnC,EAAWoB,KAAKpB,SAASmC,GAC/BC,EAASE,KACP,kBAACC,EAAD,CAAcC,IAAKxC,EAAUA,SAAUA,KAI3C,OAAOoC,I,mCAIP,OAAOX,KAAKC,MAAMN,KAAKN,MAAMC,eAAkBT,OAAOC,YAAc,K,+BAsBpE,OACE,yBAAKV,UAAU,QAAQhB,MAZL,CAClBC,MAAO,QACPC,OAAQ,OACRW,QAAS,SAUP,yBAAKG,UAAU,oBAAoBhB,MAPR,CAC7BC,MAAO,IACPC,OAAQ,SAMJ,kBAAC,EAAD,CAASsB,KAAMe,KAAKqB,gBAEtB,yBAAK5C,UAAU,WAAWhB,MAvBR,CACpBe,WAAY,QACZb,OAAQ,OACRD,MAAO,QACPQ,SAAU,aAoBJ8B,KAAKgB,gB,uCAxDb,OA1CoB,O,GAEJM,IAAMC,WCApBnB,EAASlB,OAAOC,YAmGPqC,E,kDAhGb,aAAe,IAAD,8BACZ,gBAEK9B,MAAQ,CACX3B,KAAM,IAJI,E,gEAgBO,IAAD,OAClB0D,MAAM,GAAD,OAAIvC,OAAOwC,SAAX,eACFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA5D,GACJ,EAAKmC,SAAS,CAAEnC,c,+BAIpB,IAAMC,EAAUwD,EAAIxD,QAEdc,EAAS,CACbnB,OAAO,GAAD,OAAKK,EAAL,MACN8D,MAAO,QACP,mBAAoB,SAGhBC,EAAc,CAClBpE,OAAO,GAAD,OAAK6D,EAAIpB,OAAT,MACN9B,QAAS,OACT0D,cAAe,SACf5C,eAAgB,iBAyBlB,OACE,yBAAKX,UAAU,MAAMhB,MAAOqB,GAC1B,yBAAKL,UAAU,QAAQhB,MAAOsE,GAC5B,4BAAQtE,MAzBO,CACnBwE,WAAY,OACZC,YAAa,OACbC,cAAe,QAuBT,4DAGA,mDAIF,4BAAQ1E,MArBM,CAClB2E,UAAW,SAqBL,yEAGA,+IAKJ,yBAAK3D,UAAU,UAAUhB,MApCP,CACpBS,SAAU,WACVP,OAAQ,OACRW,QAAS,SAkCL,kBAAC,EAAD,CAAO8B,OAAQoB,EAAIpB,OAAQpC,QAASA,IACpC,yBAAKS,UAAU,aAAahB,MA5BT,CACvBE,OAAQ,OACRD,MAAO,OACPQ,SAAU,aA0BF8B,KAAKN,MAAM3B,KAAKsE,KAAI,SAAAC,GAAK,OACzB,kBAAC,EAAD,CACEvE,KAAMuE,EACNtE,QAASA,a,+BA9ErB,OAbY,U,6BAiBZ,OAAOoC,M,GAdOkB,IAAMC,WCIJgB,QACW,cAA7BrD,OAAOwC,SAASc,UAEe,UAA7BtD,OAAOwC,SAASc,UAEhBtD,OAAOwC,SAASc,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9C,SAAS+C,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrB,MAAK,SAAAsB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.b6d3a2dd.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Arrow = (props) => {\n\n  const styles = {\n    width: \"30px\",\n    height: \"1px\",\n    backgroundColor: \"white\",\n    margin: \"0 10px\"\n  };\n\n  return (\n    <div style={styles}>\n    </div>\n  );\n};\n\nexport default Arrow;\n","import React from 'react';\nimport Arrow from './Arrow';\n\nconst DataPoint = ({ data, maxYear }) => {\n  if (data.years_from_today > maxYear) {\n    return null;\n  }\n\n  const style = {\n    position: \"absolute\",\n    top: `${data.years_from_today_augmented}px`,\n    transform: \"translateY(-50%)\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginLeft: \"5px\",\n  };\n\n  return (\n    <div className=\"datapoint\" style={style}>\n      <Arrow />\n      { data.title }\n    </div>\n  );\n};\n\nexport default DataPoint;\n","import React from 'react';\n\nexport default ({ markingLocation, yearsAgo}) => {\n  const lineThickness = 1;\n\n  let lineLength = 10;\n  if (yearsAgo % 1000 === 0) {\n    lineLength = 50\n  }\n  else if (yearsAgo % 100 === 0) {\n    lineLength = 20;\n  }\n\n  const styles = {\n    height: `${lineThickness}px`,\n    width: `${lineLength}px`,\n    backgroundColor: \"red\",\n    position: \"absolute\",\n    top: yearsAgo,\n    right: \"0\",\n  };\n\n  return (\n    <div className=\"ruler-marker\" style={styles}>\n    </div>\n  );\n}\n","import React from 'react';\nimport Arrow from './Arrow';\n\nconst Counter = (props) => {\n  let { year } = props;\n  if (year < 0) return null;\n  if (year === 0) year += 0; // stupid negative zero\n\n  const style = {\n    position: \"sticky\",\n    top: `${window.innerHeight / 2}px`,\n    transform: \"translateY(-50%)\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    width: \"200px\",\n  };\n\n  const formattedYear = year.toLocaleString(undefined, { minimumFrationDigits: 0 })\n\n  return (\n    <div style={style}>\n      <div>\n        { formattedYear } years ago\n      </div>\n      <Arrow />\n    </div>\n  );\n};\n\nexport default Counter;\n","import React from 'react';\nimport RulerMarking from './RulerMarking';\nimport Counter from './Counter';\n\nconst yearsPerMarking = 10;\n\nclass Ruler extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      scrollLocation: 0,\n    }\n\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"scroll\", this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"scroll\", this.handleScroll)\n  }\n\n  handleScroll() {\n    this.setState({ scrollLocation: window.scrollY - this.props.offset });\n  }\n\n  uppermostMarkerPosition() {\n    return Math.round((this.state.scrollLocation - window.innerHeight) / Ruler.yearsPerMarking) * Ruler.yearsPerMarking;\n  }\n\n  firstMarkingLocation() {\n    return Math.max(this.uppermostMarkerPosition(), 0);\n  }\n\n  lastMarkingLocation() {\n    return Math.min(this.lowermostMarkerPosition(), this.endOfHistory());\n  }\n\n  lowermostMarkerPosition() {\n    return this.firstMarkingLocation() + (3 * window.innerHeight);\n  }\n\n  static get yearsPerMarking() {\n    return yearsPerMarking;\n  }\n\n  endOfHistory() {\n    return this.props.maxYear;\n  }\n\n  numberOfMarkings() {\n    return (this.lastMarkingLocation() - this.firstMarkingLocation()) / Ruler.yearsPerMarking;\n  }\n\n  yearsAgo(i) {\n    return Math.round(this.firstMarkingLocation() + i * Ruler.yearsPerMarking);\n  }\n\n  markings() {\n    const markings = [];\n    for (let i = 0; i < this.numberOfMarkings(); i++) {\n      const yearsAgo = this.yearsAgo(i);\n      markings.push(\n        <RulerMarking key={yearsAgo} yearsAgo={yearsAgo} />\n      );\n    }\n\n    return markings;\n  }\n\n  middleYear() {\n    return Math.round(this.state.scrollLocation + (window.innerHeight / 2));\n  }\n\n  render() {\n    const markingStyles = {\n      marginLeft: \"200px\",\n      height: \"100%\",\n      width: \"250px\",\n      position: \"relative\",\n    };\n\n    const rulerStyles = {\n      width: \"250px\",\n      height: \"100%\",\n      display: \"flex\",\n    };\n\n    const counterContainerStyles = {\n      width: \"0\",\n      height: \"100%\",\n    };\n\n    return (\n      <div className=\"ruler\" style={rulerStyles}>\n        <div className=\"counter-container\" style={counterContainerStyles}>\n          <Counter year={this.middleYear()} />\n        </div>\n        <div className=\"markings\" style={markingStyles}>\n          { this.markings() }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Ruler;\n","import React from 'react';\nimport './App.css';\nimport DataPoint from './components/DataPoint';\nimport Ruler from './components/Ruler';\n\nconst maxYear = 9003020;\nconst offset = window.innerHeight;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: [],\n    };\n  }\n\n  static get maxYear() {\n    return maxYear;\n  }\n\n  static get offset() {\n    return offset;\n  }\n\n  componentDidMount() {\n    fetch(`${window.location}/data.json`)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ data })\n      });\n  }\n  render() {\n    const maxYear = App.maxYear;\n\n    const styles = {\n      height: `${maxYear}px`,\n      color: \"white\",\n      \"background-color\": \"black\"\n    };\n\n    const introStyles = {\n      height: `${App.offset}px`,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    };\n\n    const headerStyles = {\n      paddingTop: \"40px\",\n      paddingLeft: \"10px\",\n      paddingBottom: \"5px\"\n    };\n\n    const historyStyles = {\n      position: \"relative\",\n      height: \"100%\",\n      display: \"flex\"\n    };\n\n    const footerStyle = {\n      textAlign: \"left\"\n    }\n\n    const datapointsStyles = {\n      height: \"100%\",\n      width: \"100%\",\n      position: \"relative\",\n    }\n\n    return (\n      <div className=\"App\" style={styles}>\n        <div className=\"intro\" style={introStyles}>\n          <header style={headerStyles}>\n            <h1>\n              if a year were only a pixel.\n            </h1>\n            <p>\n              a showcase of time.\n            </p>\n          </header>\n          <footer style={footerStyle}>\n            <p>\n              this first long red line is the year 2020.\n            </p>\n            <p>\n              every small mark is 10 years apart, the bigger ones are 100 years apart, and the largest are 1000 years apart.\n            </p>\n          </footer>\n        </div>\n        <div className=\"history\" style={historyStyles}>\n          <Ruler offset={App.offset} maxYear={maxYear} />\n          <div className=\"datapoints\" style={datapointsStyles}>\n            { this.state.data.map(point => (\n              <DataPoint\n                data={point}\n                maxYear={maxYear} />\n            )) }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}